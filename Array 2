## An array is a data structure provided by the array module in Python. It is a collection of elements of the same data type.
## Fixed Data Type: All elements in an array must be of the same type (e.g., all integers or all floats).
## Requires Import: Arrays need to be imported using from array import array.
## Memory Efficiency: Arrays are more memory-efficient because they store elements of a single data type in a contiguous block of memory.
## Data Type Enforcement: Arrays enforce that all elements must be of the same type (e.g., integers, floats), which can help prevent bugs.



Example Array 1, 3, 5, 7, 9
Access first three items individually 


from array import *
array_num = array('i', [1,3,5,7,9])
print(array_num[0])
print(array_num[1])
print(array_num[2])


## example of data query using array 

from array import array

# Create an array of integers (representing customer IDs)
customer_ids = array('i', [101, 102, 103, 104, 105])

# Function to query the array for a specific customer ID
def find_customer(customer_id):
    if customer_id in customer_ids:
        print(f"Customer ID {customer_id} found!")
    else:
        print(f"Customer ID {customer_id} not found.")

# Query the array
find_customer(103)  # Output: Customer ID 103 found!
find_customer(110)  # Output: Customer ID 110 not found.


## Change language to practice


from array import array

fruit_codes = array('i', [111, 122, 133, 144, 155])

def find_fruit(fruit_code):
    if fruit_code in fruit_codes:
        print(f"Fruit Code {fruit_code} found!")
    else:
        print(f"Fruit Code {fruit_code} not found.")

find_fruit(111)  # Output: Customer ID 111 found!
find_fruit(110)  # Output: Customer ID 110 not found.


## practice

from array import array

car_vins = array('i', [121, 132, 143, 156, 167])


def find_vin(vin):
    if vin in car_vins:
        print(f"Car Vin {vin} found!")
    else:
        print(f"Car Vin {vin} not found.")


find_vin(121) # Car Vin 121 found!
find_vin(110) # Car Vin 110 not found.





