

##Python sets are unordered collections of unique elements, meaning that they do not allow duplicate values. A set automatically removes duplicates.
##Sets are mutable, so it is possible to add or remove elements after the set has been created. 
##Sets are commonly used for membership testing, removing duplicates, and performing mathematical set operations like union, intersection, and difference.
## Sets are not fetchable or slicable due to random placement. So no myset[0]. 


# Creating a set with curly braces
my_set = {1, 2, 3}

# Creating a set with the set() constructor
my_set = set([1, 2, 3])

# Creating an empty set
empty_set = set()

# Adding an element
my_set.add(4)  # my_set is now {1, 2, 3, 4}

# Removing an element
my_set.remove(3)  # my_set is now {1, 2, 4}

# Discarding an element (no error if element is not present)
my_set.discard(5)  # my_set remains {1, 2, 4}

## EXAMPLE 
set1 = {1, 2, 3}
set2 = {3, 4, 5}

# Union
union_set = set1 | set2  # union_set is {1, 2, 3, 4, 5}
union_set = set1.union(set2)  # Equivalent to the previous line

# Intersection
intersection_set = set1 & set2  # intersection_set is {3}
intersection_set = set1.intersection(set2) # Equivalent to the previous line

# Difference
difference_set = set1 - set2  # difference_set is {1, 2}
difference_set = set1.difference(set2) # Equivalent to the previous line
